---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: platformEngineering
---
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: payments
  description: |
    This system contains all the components related to payments, including the payment gateway, transaction processing, and fraud detection services.
spec:
  owner: productsandchannels
  dependencies:
    - api:paymentsapi
    - resource:paymentsDB
  description: |
    This system contains all the components related to payments, including the payment gateway, transaction processing, and fraud detection services.
---
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: paymentsDB
  description: |
    This resource represents the database used by the payments system, which stores payments data.
spec:
  type: database
  owner: productsandchannels
  system: payments
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
spec:
  type: website
  lifecycle: experimental
  owner: platformEngineering
  system: examples
  providesApis: [example-grpc-api]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: platformEngineering
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
